{"version":3,"sources":["Helpers/Contexts.js","Helpers/QuestionBank.js","components/Firebase.js","components/EndScreen.js","components/MainMenu.js","components/Timer.js","components/Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["QuizContext","createContext","Questions","prompt","optionA","optionB","optionC","optionD","answer","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","EndScreen","useContext","score","setScore","setGameState","name","dataRef","ref","useEffect","push","set","Date","toLocaleString","className","length","onClick","MainMenu","setName","useState","input","setInput","onChange","e","target","value","placeholder","Timer","state","minutes","seconds","this","myInterval","setInterval","setState","clearInterval","Component","Quiz","currQues","setCurrQues","optionChosen","setOptionChosen","map","option","indexOf","App","gameState","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f328524a.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const QuizContext = createContext();","export const Questions = [\r\n    {\r\n        prompt: \"What is 1+3?\",\r\n        optionA:\"24\",\r\n        optionB:\"21\",\r\n        optionC:\"4\",\r\n        optionD:\"9\",\r\n        answer:\"C\",\r\n    },\r\n    {\r\n        prompt: \"What is 1x2?\",\r\n        optionA:\"24\",\r\n        optionB:\"21\",\r\n        optionC:\"4\",\r\n        optionD:\"2\",\r\n        answer:\"D\",\r\n    },\r\n    {\r\n        prompt: \"What is 15x15?\",\r\n        optionA:\"24\",\r\n        optionB:\"225\",\r\n        optionC:\"4\",\r\n        optionD:\"9\",\r\n        answer:\"B\",\r\n    },\r\n    {\r\n        prompt: \"What is 10+3?\",\r\n        optionA:\"24\",\r\n        optionB:\"21\",\r\n        optionC:\"4\",\r\n        optionD:\"13\",\r\n        answer:\"D\",\r\n    },\r\n]","import firebase from 'firebase';\nvar firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyBS5gqxDdG8VZ72h0Ncofo9jaelb4q2J4o\",\n    authDomain: \"react-quiz-app-33aaa.firebaseapp.com\",\n    databaseURL: \"https://react-quiz-app-33aaa-default-rtdb.firebaseio.com\",\n    projectId: \"react-quiz-app-33aaa\",\n    storageBucket: \"react-quiz-app-33aaa.appspot.com\",\n    messagingSenderId: \"147153930008\",\n    appId: \"1:147153930008:web:8d63ac99dc82db88b3006d\"\n});\n\nvar db = firebaseApp.database();\nexport { db };","import React, { useContext, useEffect } from 'react'\r\nimport { QuizContext } from '../Helpers/Contexts'\r\nimport { Questions } from '../Helpers/QuestionBank'\r\nimport { db } from './Firebase';\r\n\r\nexport const EndScreen = () => {\r\n    const { score, setScore, setGameState, name } = useContext(QuizContext)\r\n    var dataRef = db.ref('Data');\r\n\r\n    const restartQuiz = () => {\r\n        setScore(0);\r\n        setGameState(\"menu\");\r\n    }\r\n    const sendData = () => {\r\n        var newDataRef = dataRef.push();\r\n        // var time = new Date();\r\n        newDataRef.set({\r\n            \"name\": name,\r\n            \"score\": score,\r\n            \"time\": Date().toLocaleString(),\r\n        });\r\n    }\r\n    useEffect(() => sendData()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    , [])\r\n    return (\r\n        <div className=\"item-row\">\r\n            <h1 className=\"end\">Quiz Finished</h1>\r\n            <h2 className=\"btn btn-info name\">Hello {name}</h2>\r\n            <h3 className=\"end\">Your Score is {score}/{Questions.length}</h3>\r\n            <button className=\"btn btn-info btn-finish\" onClick={restartQuiz}>Restart Quiz</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { QuizContext } from '../Helpers/Contexts'\r\n\r\nexport const MainMenu = () => {\r\n    const {setGameState, setName} = useContext(QuizContext);\r\n    const [input,setInput]=useState(\"\");\r\n    const setInputText = (e)=>{\r\n        setInput(e.target.value);\r\n    }\r\n    return (\r\n        <div className=\"menu\">\r\n            <input onChange={setInputText} placeholder=\"Enter your Name\"></input>\r\n            <button className=\"btn btn-info btn-lg\" onClick={()=>{setGameState(\"quiz\"); setName(input)}}>Start Quiz</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\n\nexport default class Timer extends Component {\n    state = {\n        minutes: 4,\n        seconds: 0,\n    }\n\n    componentDidMount() {\n        this.myInterval = setInterval(() => {\n            const { seconds, minutes } = this.state\n\n            if (seconds > 0) {\n                this.setState(({ seconds }) => ({\n                    seconds: seconds - 1\n                }))\n            }\n            if (seconds === 0) {\n                if (minutes === 0) {\n                    clearInterval(this.myInterval)\n                } else {\n                    this.setState(({ minutes }) => ({\n                        minutes: minutes - 1,\n                        seconds: 59\n                    }))\n                }\n            } \n        }, 1000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.myInterval)\n    }\n\n    render() {\n        const { minutes, seconds } = this.state\n        return (\n            <div className=\"timer\">\n                { minutes === 0 && seconds === 0\n                    ? <h1>Busted!</h1>\n                    : <h1>Time Remaining: {minutes}:{seconds < 10 ? `0${seconds}` : seconds}</h1>\n                }\n            </div>\n        )\n    }\n}","import React, { useContext, useState } from 'react'\r\nimport { QuizContext } from '../Helpers/Contexts';\r\nimport { Questions } from '../Helpers/QuestionBank';\r\nimport Timer from './Timer';\r\n\r\nexport const Quiz = () => {\r\n    const [currQues, setCurrQues] = useState(0);\r\n    const [optionChosen, setOptionChosen] = useState(\"\");\r\n    const { score, setScore, setGameState } = useContext(QuizContext);\r\n    // var dataRef = db.ref('Data');\r\n\r\n    const nextQuestion = () => {\r\n        if (Questions[currQues].answer === optionChosen) {\r\n            setScore(score + 1);\r\n        }\r\n        setCurrQues(currQues + 1)\r\n        // alert(score)\r\n    };\r\n\r\n    const finishQuiz = () => {\r\n        if (Questions[currQues].answer === optionChosen) {\r\n            setScore(score + 1);\r\n        }\r\n        // sendData();\r\n        setGameState(\"endScreen\");\r\n    }\r\n    // const sendData = () =>{\r\n    //     var newDataRef = dataRef.push();\r\n    //     newDataRef.set({\r\n    //         \"name\": name,\r\n    //         \"score\": score,\r\n    //     });\r\n    // }\r\n    return (\r\n        <div className=\"item-row\">\r\n            <Timer></Timer>\r\n            <h2 className=\"ques\">{Questions[currQues].prompt}</h2>\r\n            \r\n            <div className=\"options\">\r\n                <button className=\"btn btn-sm btn-info\" onClick={() => setOptionChosen(\"A\")}>\r\n                    {Questions[currQues].optionA}\r\n                </button>\r\n                <button className=\"btn btn-sm btn-info\" onClick={() => setOptionChosen(\"B\")}>\r\n                    {Questions[currQues].optionB}\r\n                </button>\r\n                <button className=\"btn btn-sm btn-info\" onClick={() => setOptionChosen(\"C\")}>\r\n                    {Questions[currQues].optionC}\r\n                </button>\r\n                <button className=\"btn btn-sm btn-info\" onClick={() => setOptionChosen(\"D\")}>\r\n                    {Questions[currQues].optionD}\r\n                </button>\r\n            </div>\r\n            {currQues === Questions.length - 1 ? (\r\n                <button className=\"btn btn-info btn-finish\" onClick={() => { finishQuiz(); }}>Finish Quiz</button>\r\n            ) : (\r\n                    <button className=\"btn btn-info pb\" onClick={nextQuestion}>Next Question</button>\r\n                )}\r\n            <br /><br />\r\n            <div className=\"panel row\">\r\n                <h3 className=\"ques col-sm-12 col-xs-12\">Questions Panel</h3>\r\n                <div className=\"btn-div\">\r\n                    {Questions.map(option => {\r\n                        return (<button className=\"btn-warning\" onClick={() => setCurrQues(Questions.indexOf(option))}>Question {Questions.indexOf(option) + 1}</button>)\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\nimport './App.css';\nimport { EndScreen } from './components/EndScreen';\nimport { MainMenu } from './components/MainMenu';\nimport { Quiz } from './components/Quiz';\nimport { QuizContext } from './Helpers/Contexts';\n\nfunction App() {\n  const [gameState, setGameState] = useState(\"menu\");\n  const [score, setScore] = useState(0);\n  const [name, setName] = useState(\"\");\n\n  return (\n    <div className=\"App center-column\">\n      <h3 className=\"heading\">Quiz App</h3>\n      <QuizContext.Provider value={{ gameState, setGameState, score, setScore,name, setName }}>\n        {gameState === \"menu\" && <MainMenu />}\n        {gameState === \"quiz\" && <Quiz />}\n        {gameState === \"endScreen\" && <EndScreen />}\n      </QuizContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}