{"version":3,"sources":["Helpers/Contexts.js","Helpers/QuestionBank.js","components/EndScreen.js","components/MainMenu.js","components/Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["QuizContext","createContext","Questions","prompt","optionA","optionB","optionC","optionD","answer","EndScreen","useContext","score","setScore","setGameState","name","className","length","onClick","MainMenu","setName","useState","input","setInput","onChange","e","target","value","placeholder","Quiz","currQues","setCurrQues","optionChosen","setOptionChosen","App","gameState","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31ffeb5e.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const QuizContext = createContext();","export const Questions = [\r\n    {\r\n        prompt: \"What is 1+3?\",\r\n        optionA:\"24\",\r\n        optionB:\"21\",\r\n        optionC:\"4\",\r\n        optionD:\"9\",\r\n        answer:\"C\",\r\n    },\r\n    {\r\n        prompt: \"What is 1x2?\",\r\n        optionA:\"24\",\r\n        optionB:\"21\",\r\n        optionC:\"4\",\r\n        optionD:\"2\",\r\n        answer:\"D\",\r\n    },\r\n    {\r\n        prompt: \"What is 15x15?\",\r\n        optionA:\"24\",\r\n        optionB:\"225\",\r\n        optionC:\"4\",\r\n        optionD:\"9\",\r\n        answer:\"B\",\r\n    },\r\n    {\r\n        prompt: \"What is 10+3?\",\r\n        optionA:\"24\",\r\n        optionB:\"21\",\r\n        optionC:\"4\",\r\n        optionD:\"13\",\r\n        answer:\"D\",\r\n    },\r\n]","import React, { useContext } from 'react'\r\nimport { QuizContext } from '../Helpers/Contexts'\r\nimport { Questions } from '../Helpers/QuestionBank'\r\nexport const EndScreen = () => {\r\n    const { score, setScore, setGameState, name }=useContext(QuizContext)\r\n    const restartQuiz=()=>{\r\n        setScore(0);\r\n        setGameState(\"menu\");\r\n    }\r\n    return (\r\n        <div className=\"item-row\">\r\n            <h1 className=\"end\">Quiz Finished</h1>\r\n            <h2 className=\"btn btn-info name\">Hello {name}</h2>\r\n            <h3 className=\"end\">Your Score is {score}/{Questions.length}</h3>\r\n            <button className=\"btn btn-info btn-finish\" onClick={restartQuiz}>Restart Quiz</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { QuizContext } from '../Helpers/Contexts'\r\n\r\nexport const MainMenu = () => {\r\n    const {setGameState, setName} = useContext(QuizContext);\r\n    const [input,setInput]=useState(\"\");\r\n    const setInputText = (e)=>{\r\n        setInput(e.target.value);\r\n    }\r\n    return (\r\n        <div className=\"menu\">\r\n            <input onChange={setInputText} placeholder=\"Enter your Name\"></input>\r\n            <button className=\"btn btn-info btn-lg\" onClick={()=>{setGameState(\"quiz\"); setName(input)}}>Start Quiz</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { QuizContext } from '../Helpers/Contexts';\r\nimport { Questions } from '../Helpers/QuestionBank';\r\n\r\nexport const Quiz = () => {\r\n    const [currQues, setCurrQues] = useState(0);\r\n    const [optionChosen, setOptionChosen] = useState(\"\");\r\n    const { score, setScore, setGameState } = useContext(QuizContext);\r\n\r\n\r\n    const nextQuestion = () => {\r\n        if (Questions[currQues].answer === optionChosen) {\r\n            setScore(score + 1);\r\n        }\r\n        setCurrQues(currQues + 1)\r\n        // alert(score)\r\n    };\r\n\r\n    const finishQuiz = ()=>{\r\n        if (Questions[currQues].answer === optionChosen) {\r\n            setScore(score + 1);\r\n        }\r\n        setGameState(\"endScreen\");\r\n        \r\n    }\r\n    return (\r\n        <div className=\"item-row\">\r\n            <h2 className=\"ques\">{Questions[currQues].prompt}</h2>\r\n            <div className=\"options\">\r\n                <button className=\"btn btn-sm btn-info\" onClick={() => setOptionChosen(\"A\")}>\r\n                    {Questions[currQues].optionA}\r\n                </button>\r\n                <button className=\"btn btn-sm btn-info\" onClick={() => setOptionChosen(\"B\")}>\r\n                    {Questions[currQues].optionB}\r\n                </button>\r\n                <button className=\"btn btn-sm btn-info\" onClick={() => setOptionChosen(\"C\")}>\r\n                    {Questions[currQues].optionC}\r\n                </button>\r\n                <button className=\"btn btn-sm btn-info\" onClick={() => setOptionChosen(\"D\")}>\r\n                    {Questions[currQues].optionD}\r\n                </button>\r\n            </div>\r\n            {currQues === Questions.length - 1 ? (\r\n                <button className=\"btn btn-info btn-finish\" onClick={finishQuiz}>Finish Quiz</button>\r\n            ) : (\r\n                    <button className=\"btn btn-info pb\" onClick={nextQuestion}>Next Question</button>\r\n                )}\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\nimport './App.css';\nimport { EndScreen } from './components/EndScreen';\nimport { MainMenu } from './components/MainMenu';\nimport { Quiz } from './components/Quiz';\nimport { QuizContext } from './Helpers/Contexts';\n\nfunction App() {\n  const [gameState, setGameState] = useState(\"menu\");\n  const [score, setScore] = useState(0);\n  const [name, setName] = useState(\"\");\n\n  return (\n    <div className=\"App center-column\">\n      <h3 className=\"heading\">Quiz App</h3>\n      <QuizContext.Provider value={{ gameState, setGameState, score, setScore,name, setName }}>\n        {gameState === \"menu\" && <MainMenu />}\n        {gameState === \"quiz\" && <Quiz />}\n        {gameState === \"endScreen\" && <EndScreen />}\n      </QuizContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}